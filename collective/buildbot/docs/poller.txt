The poller recipe
******************

Supported options
=================

The recipe supports the following options:

    Lists the projects the buildbot deal with (one project=one column) The
    values must be a section name in the configuration file.  Then each of this
    section must contain:
    
``vcs``

  The version control system. Defaults to ``svn``. Currently only
  Subversion repositories are supported.

``repository``

  Full URL to the branch in the code repository containing the project
  code.

``hist-max``

  Number of history lines to look at (Default 100).

``user``

  A svn user (Default None).

``password``

  A valid svn password for the user (Default None).

``poll-interval``

  Interval in seconds to check for changes.

``svn-binary``

  Path to the ``svn`` binary. Defaults to ``svn`` which should work if
  you have in your ``PATH``.

Example usage
=============

We can define a poller to make our buildbot aware of commits:: 

    >>> write('buildout.cfg',
    ... """
    ... [buildout]
    ... parts = svnpoller
    ... 
    ... [svnpoller]
    ... recipe = collective.buildbot:poller
    ... repository = http://example.com/svn/buildout/trunk
    ... user = h4x0r
    ... password = passwd
    ... """)

    >>> print system(buildout)
    Installing svnpoller.
    Generated config '/sample-buildout/parts/pollers/svnpoller.cfg'.

Poller generation. You can see here all the available options::

    >>> cat(join('parts', 'pollers', 'svnpoller.cfg'))
    [poller]
    hist-max = 100
    repository = http://example.com/svn/buildout/trunk
    vcs = svn
    user = h4x0r
    svn-binary = svn
    password = passwd
    poll-interval = 60
    <BLANKLINE>


The pollers recipe
*******************

The ``collective.buildbot:pollers`` is similar to the
``collective.buildbot:poller`` recipe and the only difference is that
it allows you to define multiple pollers in one buildout section.

Supported options
=================

The options are otherwise the same except that ``repository`` is
replaced by ``repositories``.

``repositories``

  A sequence of white space separated repository URLs to poll.

  
